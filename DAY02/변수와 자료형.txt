프로그래밍에서 데이터를 사용할때는 무조건 RAM안에 저장이 된다...

상수
 - 데이터를 변경할수 없는 공간
 - 리터널상수,심볼릭상수(나중에...)
 
 - 리터널상수
  - 데이터 그 자체..
  - 자동으로 일정한 형식의 공간이 만들어지고 자동으로 저장된다...
  - 공간을 구별할수 있는 방법이 없다...
  - 그 공간을 다시 이용할수 없다...
  - 단발성데이터..
  
데이터를 저장하고 관리하는 공간(변수,객체,배열....)
 - 데이터를 저장하는 공간
 - 우리가 직접 일정한 형식의 공간을 만들어서 저장하여야 한다.
 - 공간을 구별할수 있는 이름이 있다...
 - 이름을 통해서 그 공간을 다시 이용할수 있다...
 - 지속성데이터..
 
 - 선언
  - 메모리에 일정한 형식의 공간을 할당받고 이름을 붙이는 작업 
 - 초기화
  - 할당받은 공간에 값을 처음 넣는 작업
  - 할당받은 공간은 항상 쓰레기값으로 채워져 있다....
   - 초기화를 하지 않으면 할당받은 공간의 데이터를 이용하려 할때 에러가 발생된다...
  - JAVA에서는 자동으로 초기화 되는 경우가 많다...
 - 호출
  - 할당받은 공간을 불러오는 작업
 
 
 
변수
 - 데이터를 하나를 저장하는 공간
 - 우리가 직접 일정한 형식의 변수공간을 만들어서 저장하여야 한다.
 - 공간을 구별할수 있는 변수명이 있다...
 - 변수명을 통해서 그 공간을 다시 이용할수 있다...
 - 지속성데이터..
 
 - 선언
  - 메모리에 일정한 형식의 공간을 할당받고 변수명을 붙이는 작업 
  - 형식
  	자료형 변수명;
   - 변수명
    - 변수공간을 구별하는 이름 
    - 암묵적인 규칙
     - 데이터의 성격이 연상되는 단어로 이름을 지어준다...
     - 소문자를 권장한다..
     
※ 작명규칙
 1. 영문자 숫자 _(언더바)로 구성된다..
 2. 숫자로 시작할수 없다.
 3. 대소문자 구별 가능.
 4. 공백이나 특수 기호는 사용할수 없다.
 5. 예약어는 사용할수 없다.
  - 예약어 - 프로그램상에서 의미를 가지고 있는 키워드로써 사용자 필요에 의해 
             의미를 변경할수 없는단어...
 
※자료형
 - 데이터의 형태(정수,실수,문자)를 구별하고,데이터의 범위나 부호의 사용여부등을 결정하는 키워드
 - 공간의 형식을 정의한 키워드
 - 공간을 찍어내는 틀
 
 - 종류
  1. 기본형(원시형) - 데이터를 저장하고 관리하는 공간
   - 정수형
    - byte , short , int , long
   - 실수형
    - float , double
   - 문자형
    - char
   - 논리형 - 참과 거짓을 저장하고 관리하는 자료형
    - boolean
  2. 참조형(객체형) - 실제데이터가 저장되는 공간(인스턴스공간)의 정보를 저장하는 참조형 변수공간이 함께 만들어지는 형태
   - 기본형을 제외한 모든 자료형
   - 배열형
   - 문자열
   - Class(사용자 정의 자료형)
   ....

 - 초기화
  - 할당받은 변수공간에 값을 처음 넣는 작업
  - 할당받은 변수공간은 항상 쓰레기값으로 채워져 있다....
   - 초기화를 하지 않으면 할당받은 변수공간의 데이터를 이용하려 할때 에러가 발생된다...
  - 형식
  	1. 선언과 동시의 초기화
  		자료형 변수명 = 값;
  	2. 선언 후 초기화
		자료형 변수명;
		변수명 = 값;
		
※ = (대입연산자) - 우측 공간의 값을 좌측 공간에 대입하는 연산자.

 - 호출
  - 할당받은 변수공간을 불러오는 작업
  - 형식
   변수명
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 