제어문
 - 코드의 흐름을 제어하는 문장...
 - 코드의 일정부분을 반복하여 실행 하거나 
   코드의 일정부분을 선택하여 실행하는 문장(문법)
   
 - 종류
  - 조건문 - if ~else
   - 조건식의 결과에 따라서 실행 내용을 선택하여 실행하는 제어문
  - 선택문 - switch ~case
   - 값에 따라서 실행내용을 선택하여 실행하는 제어문
  - 반복문 - while , do ~while , for
   - 코드의 일정부분을 반복하여 실행하는 제어문...
   
===================================================================================

if ~else - 조건문
 - 조건식의 결과가 참이냐 거짓이냐에 따라서 실행 내용을 선택하여 실행하는 제어문
 
 - 형태에 따른 분류
  - 단순 if
   - if문의 조건이 참인 경우 추가적인 표현을 할때 사용한다.
   - 형식
   	if ( 조건식 ) {
   		종속문장;
   	}
   	
  - if ~else
   - 조건식의 결과가 참과 거짓일때 실행내용을 선택하여 표현해야 할때...
   - 형식
   	if (조건식) {
   		종속문장;
   	} else {
   		종속문장;
   	}
  
  - if ~else if ~ else
   - 조건식이 여러개 필요한 경우....
   - 형식
    if(조건식) {
    	종속문장;
    }else if (조건식) {
   		종속문장;
   	} else if (조건식) {
   		종속문장;
   	} else {
   		종속문장;
   	}
 
 
=========================================================================================

 
선택문 - switch~case
 - 값에 따라서 실행 내용을 선택하여 실행하는 제어문...
 - 공간에 있을 경우의 수를 생각하여 모두 case문으로 작성한다...
 - 공간의 값에 따라서 해당 case문을 실행한다...
 
 - 형식
 
 	switch( 공간 ) {
 		case 상수1:
 			실행내용;
 		case 상수2:
 			실행내용;
 		case 상수3:
 			실행내용;
 		case 상수4:
 			실행내용;
 		.......
 		default:
 			실행내용;
 	}
 	
 - case문의 상수값은 반드시 byte , short , int , char , String 중에 하나의 타입이어야 한다.
 - 공간은 일반적으로 변수 공간을 이용한다...
  - 반드시 최종적인 형태는  byte , short , int , char , String 중에 하나의 타입이어야 한다.
  - 연산식이 들어가도 상관 없다...
 - default는 if문의 else와 비슷한 역할이다...
 - 별다른 제약이 없으면 해당 case문 부터 순차적으로 실행한다...
 
 - break;
  - if문을 제외한 가장 처음만나는 중괄호를 벗어나는 역할...
  - if문을 제외한 제어문에서 실행 흐름(루프)으로 부터 벗어나려할때
    사용하는 흐름제어문.
    
=========================================================================================================

반복문
 - 코드의 일정부분을 반복하여 실행하는 제어문...
 - 조건식의 결과가 참일동안 반복하여 실행하는 제어문..
 - 반드시 탈출 조건 또는 종료지점을 만들어주어야 한다.
 
 - 종류
  - while - 반복할 횟수가 일정하지 않을때..
  - do~while - 무조건 한번은 실행을 해야 하며 잘못된 데이터를 거를때 사용한다...
  - for - 반복할 횟수가 일정할때..

======================================================================================

while문
 - 반복할 횟수가 일정하지 않을때...
 - 반복할 횟수를 모를때...
 - 반복할 횟수가 무한일때..
 
 - 형식
 	while( 조건식 ) {
 		종속문장;
 	}

=======================================================================================

do~while문
 - 무조건 한번은 실행을 해야 하며 잘못된 데이터를 거를때 사용한다...
 - 형식적인 특성에 따라 종속문장을 먼저 실행하고 그후에 조건식을 비교하는 형식...
  - 종속문장의 결과를 조건식에서 비교하기에 좋다...
 - 조건식은 보통 내가 원하는 조건의 반대를 조건식으로 적는다...
  
 - while 문과 구별하기위해서 제일 끝에 ;을 적어준다...
 
 - 형식
 	do {
 		종속문장;	
 	} while( 조건식 );
 
 
========================================================================================

for문
 - 반복할 횟수가 일정할때...
 - 반복할 횟수를 알고 있을때..
 - 반복 횟수가 유한할때..
 - 초기식,조건식,증감식들을 구분하기위해서 반드시 ;두개가 있어야 한다...
 
 
 - 형식
 
 	for( 초기식; 조건식; 증감식 ) {
 		종속문장;
 	}
 	
 	초기식
 	 - 반복할 변수를 설정하는 부분...
 	 - 기존 공간을 이용해도 되고 공간을 선언해도 된다...
 	 - 반복의 시작
 	
 	조건식
 	 - 반복의 끝..
 	 - 단순한 조건식들이 사용된다..
 	 
 	증감식
 	 - 일정하게 증가 또는 감소하는식..
 	 - 일반적으로 증감연산자가 많이 사용된다...
 	 - 반드시 반복할 변수의 값을 변화 시켜야 한다.
 	 	i++   i+=1  i = i + 1  O
 	 	
 	 	i + 1 X

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
  





























  
  
  
  
  
  
  
  
  
  
  
  